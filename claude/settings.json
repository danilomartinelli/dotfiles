{
  "permissions": {
    "allow": [
      "Bash(*)",
      "Edit(*)",
      "Glob(*)",
      "Grep(*)",
      "LS(*)",
      "MultiEdit(*)",
      "NotebookEdit(*)",
      "NotebookRead(*)",
      "Read(*)",
      "Task(*)",
      "TodoWrite(*)",
      "WebFetch(*)",
      "WebSearch(*)",
      "Write(*)"
    ],
    "deny": [],
    "ask": []
  },
  "defaultMode": "acceptEdits",
  "env": {
    "CLAUDE_CODE_ENABLE_TELEMETRY": "0"
  },
  "enableAllProjectMcpServers": true,
  "autoUpdates": true,
  "preferredNotifChannel": "ghostty",
  "statusLine": {
    "type": "command",
    "command": "input=$(cat); current_dir=$(echo \"$input\" | jq -r '.workspace.current_dir // .cwd'); battery_status() { if [[ $(uname) == \"Darwin\" ]] && [[ $(sysctl -n hw.model 2>/dev/null) == *\"Book\"* ]]; then battery_percent=$(pmset -g batt | grep -Eo \"\\d+%\" | cut -d% -f1); if [[ -n \"$battery_percent\" ]]; then printf \"ðŸ”‹ %s%% \" \"$battery_percent\"; fi; fi; }; directory_name() { printf \"\\033[1;36m%s\\033[0m\" \"$(basename \"$current_dir\")\"; }; git_status() { if [[ -d \"$current_dir/.git\" ]]; then cd \"$current_dir\" || return; branch=$(git symbolic-ref HEAD 2>/dev/null | awk -F/ '{print $NF}'); if [[ -n \"$branch\" ]]; then if [[ -z $(git status --porcelain 2>/dev/null) ]]; then printf \" on \\033[1;32m%s\\033[0m\" \"$branch\"; else printf \" on \\033[1;31m%s\\033[0m\" \"$branch\"; fi; if git rev-parse --is-inside-work-tree >/dev/null 2>&1; then upstream_branch=$(git rev-parse --abbrev-ref @{upstream} 2>/dev/null); if [[ -n \"$upstream_branch\" ]]; then unpushed=$(git cherry -v \"$upstream_branch\" 2>/dev/null | wc -l | xargs); if [[ \"$unpushed\" -gt 0 ]]; then printf \" with \\033[1;35m%s unpushed\\033[0m\" \"$unpushed\"; fi; fi; fi; fi; fi; }; printf \"%sin %s%s\" \"$(battery_status)\" \"$(directory_name)\" \"$(git_status)\""
  }
}
